message(STATUS "Building tests for ${PROJECT_NAME}")

if (${BUILD_SHARED_LIBS})
	set(Boost_USE_STATIC_LIBS OFF)
	set(Boost_USE_STATIC_RUNTIME OFF)
else()
	set(Boost_USE_STATIC_LIBS ON)
	set(Boost_USE_STATIC_RUNTIME ON)
endif()
set(Boost_USE_MULTITHREAD ON)
set(Boost_NO_BOOST_CMAKE ON)
find_package(Boost REQUIRED COMPONENTS unit_test_framework)

function(add_boost_test FEATURENAME)
	add_executable(boost_test_${FEATURENAME} boost_test_${FEATURENAME}.cpp)
	if (${BUILD_SHARED_LIBS})
		target_compile_definitions(boost_test_${FEATURENAME} PRIVATE BOOST_TEST_DYN_LINK)
	endif()
	target_link_libraries(boost_test_${FEATURENAME} PRIVATE Boost::unit_test_framework ${PROJECT_NAME}_compiler_flags)
	foreach(required_dependency ${ARGN})
		if (NOT TARGET ${required_dependency})
			message(WARNING "${required_dependency} target does not exist in ${PROJECT_NAME}. Check against typo!")
		endif()
		target_link_libraries(boost_test_${FEATURENAME} PRIVATE ${required_dependency})
	endforeach()
	target_include_directories(boost_test_${FEATURENAME} PRIVATE "${CMAKE_SOURCE_DIR}/dictionary_creator_library")
	add_test(NAME ${FEATURENAME}_boost_test COMMAND boost_test_${FEATURENAME})
	set_tests_properties(${FEATURENAME}_boost_test PROPERTIES PASS_REGULAR_EXPRESSION "No errors detected")
	set_property(TARGET boost_test_${FEATURENAME} PROPERTY FOLDER "tests/boost")
endfunction()

add_boost_test(regex_parser regex_parser console_fs_manager)
add_boost_test(connections connections)
add_boost_test(dictionary_entry dictionary_entry)
add_boost_test(dictionary_definer dictionary_definer)
target_link_libraries(boost_test_dictionary_definer PRIVATE nlohmann_json::nlohmann_json)
add_boost_test(sorters dictionary_entry dictionary dictionary_definer)
add_boost_test(dictionary dictionary)
# following wokaround is necessary since -wno-error=pessimizing-move and -wno-pessimizing-move gives no effect
target_compile_options(boost_test_dictionary PRIVATE $<$<COMPILE_LANG_AND_ID:CXX,AppleClang,ARMClang,Clang>:-w>)
add_boost_test(dictionary_exporter dictionary)
add_boost_test(dictionary_creator dictionary_creator)
add_boost_test(dictionary_manager dictionary_manager)

add_subdirectory(obsolete_tests)
